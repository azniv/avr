
#ifndef	_TWI_H
#define _TWI_H 1

#define DDR_DS  DDRC
#define PORT_DS PORTC



/////////////////////////////////////////////////////
// Отправка команды СТАРТ
/////////////////////////////////////////////////////
static inline void TWI_Start(void){
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
}
/////////////////////////////////////////////////////
// Отправка команды СТОП
/////////////////////////////////////////////////////
static inline void TWI_Stop(void){
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
}

/*
__attribute__((always_inline)) void init_DS(void){
	TWBR    = 0xFF; 
	DDR_DS  &= ~((1<<4)|(1<<5));
	PORT_DS |=(1<<4)|(1<<5);
	
	//При частоте 1 МГц 
	//TWSR = (0 << TWPS1)|(0 << TWPS0); //Пред делитель на 64
	//TWCR |= (1 << TWEN); //Включение модуля TWI
}*/
/////////////////////////////////////////////////////
// Отправка байта
/////////////////////////////////////////////////////
static inline void TWI_SendByte(uint8_t c){
	TWDR = c;//загрузка значения в регистр данных
	TWCR = (1<<TWINT)|(1<<TWEN);//начало передачи байта данных
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
}

/////////////////////////////////////////////////////
// Чтение байта 
/////////////////////////////////////////////////////
static inline void TWI_ReadByte(void){
	TWCR = (1<<TWINT)|(1<<TWEN);
    while (!(TWCR & (1<<TWINT)));
    TWI_Stop();
}

//отправка SLA_W + байт данных
void TWI_SendPocket (uint8_t  value, uint8_t adres_rw)
{
	TWI_Start(); // генерируем условие СТАРТ
	TWI_SendByte(adres_rw); //оправляем адрес устройства+бит запись
	TWI_SendByte(value);//отправляем байт данных
	TWI_Stop();//генерируем условие СТОП
}

//добавляем функции чтения по I2C
//чтение байта
uint8_t TWI_RecieveByte(void)
{
	uint8_t dat;//переменная хранения значения
	TWCR |= (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
	dat = TWDR;//читаем регистр данных
	return dat;
}
	
/////////////////////////////////////////////////////
// Инициализация устройства
/////////////////////////////////////////////////////

#endif	/* TWI.h */